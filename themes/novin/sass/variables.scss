/*Color palette*/

$color_white_0: #ffffff;
$color_white_1: #fcfcfc;

$color_black_0: #000000;
$color_black_1: #1b1c1d; //Eerie Black
$color_black_2: #1f1f1f; //Eerie Black

$color_orange_1: #f4d06f; //Orange Yellow Crayola
$color_orange_2: #feab1f; //Bright Yellow Crayola

$color_lightblue_0: #9dd9d2; //Middle Blue Green

$color_red_0: #ff3a20;
$color_red_1: #d00000;

$color_gray_1: #3e3e3e; //onyx
$color_gray_2: #f8f8f8; //Cultured
$color_gray_3: #b4b4b4; //Silver Chalice
$color_gray_4: #727272;
$color_gray_5: #404040;
$color_gray_6: #8f8a8a;
$color_gray_7: #1b1e22;
$color_gray_8: #dbdbdb;
$color_gray_9: #aaaaaa;
$color_gray_10: #6a6a69;

$color_blue_0: #004794; //Yale Blue
$color_blue_1: #3d405b; //Independence

/*Media queries breakpoints*/
$query__mobile: 760px;
$query__tablet: 1025px;
$query__desktop: 1367px;
$query__ultrahd: 1921px;
$query__4k: 2561px;

/* Element First Media Queries
========================================================= */

// A map of breakpoints.
$breakpoints: (
	mobile: $query__mobile,
	tablet: $query__tablet,
	desktop: $query__desktop,
	ultrahd: $query__ultrahd,
	4k: $query__4k,
);

@mixin for-size($breakpoint, $direction: down) {
	// If the breakpoint exists in the map.
	@if map-has-key($breakpoints, $breakpoint) {
		// Get the breakpoint value.
		$breakpoint-value: map-get($breakpoints, $breakpoint);

		// Determine the direction and then write the media query.
		@if $direction == up {
			@media (min-width: $breakpoint-value) {
				@content;
			}
		} @else if $direction == down {
			@media (max-width: $breakpoint-value) {
				@content;
			}
		}
	}
	// If the breakpoint doesn't exist in the map, pass a manual breakpoint
	@else {
		@if $direction == up {
			@media (min-width: $breakpoint) {
				@content;
			}
		} @else if $direction == down {
			@media (max-width: $breakpoint) {
				@content;
			}
		}
	}
}

//General padding settings if you want left and right empty white space on your side
$k4k_padding_left: 8vw;
$k4k_padding_right: 8vw;
$ultrahd_padding_left: 7vw;
$ultrahd_padding_right: 7vw;
$desktop_padding_left: 7vw;
$desktop_padding_right: 7vw;
$laptop_padding_left: 5vw;
$laptop_padding_right: 5vw;
$tablet_padding_left: 3vw;
$tablet_padding_right: 3vw;
$mobile_padding_left: 15px;
$mobile_padding_right: 15px;

//General padding settings if you want left and right empty white space on your side
$k4k_margin_left: $k4k_padding_left;
$k4k_margin_right: $k4k_padding_right;
$ultrahd_margin_left: $ultrahd_padding_left;
$ultrahd_margin_right: $ultrahd_padding_right;
$desktop_margin_left: $desktop_padding_left;
$desktop_margin_right: $desktop_padding_right;
$laptop_margin_left: $laptop_padding_left;
$laptop_margin_right: $laptop_padding_right;
$tablet_margin_left: $tablet_padding_left;
$tablet_margin_right: $tablet_padding_right;
$mobile_margin_left: $mobile_padding_left;
$mobile_margin_right: $mobile_padding_right;

@mixin padding-width {
	@include for-size(desktop, up) {
		padding-left: $desktop_padding_left;
		padding-right: $desktop_padding_right;
	}

	@include for-size(ultrahd, up) {
		padding-left: $ultrahd_padding_left;
		padding-right: $ultrahd_padding_right;
	}

	@include for-size(4k, up) {
		padding-left: $k4k_padding_left;
		padding-right: $k4k_padding_right;
	}

	@include for-size(desktop, down) {
		padding-left: $laptop_padding_left;
		padding-right: $laptop_padding_right;
	}

	@include for-size(tablet, down) {
		padding-left: $tablet_padding_left;
		padding-right: $tablet_padding_right;
	}

	@include for-size(mobile, down) {
		padding-left: $mobile_padding_left;
		padding-right: $mobile_padding_right;
	}
}

@mixin margin-width {
	@include for-size(desktop, up) {
		margin-left: $desktop_margin_left;
		margin-right: $desktop_margin_right;
	}

	@include for-size(ultrahd, up) {
		margin-left: $ultrahd_margin_left;
		margin-right: $ultrahd_margin_right;
	}

	@include for-size(4k, up) {
		margin-left: $k4k_margin_left;
		margin-right: $k4k_margin_right;
	}

	@include for-size(desktop, down) {
		margin-left: $laptop_margin_left;
		margin-right: $laptop_margin_right;
	}

	@include for-size(tablet, down) {
		margin-left: $tablet_margin_left;
		margin-right: $tablet_margin_right;
	}

	@include for-size(mobile, down) {
		margin-left: $mobile_margin_left;
		margin-right: $mobile_margin_right;
	}
}

@mixin -margin-width {
	@include for-size(desktop, up) {
		margin-left: -$desktop_margin_left;
		margin-right: -$desktop_margin_right;
	}

	@include for-size(ultrahd, up) {
		margin-left: -$ultrahd_margin_left;
		margin-right: -$ultrahd_margin_right;
	}

	@include for-size(4k, up) {
		margin-left: -$k4k_margin_left;
		margin-right: -$k4k_margin_right;
	}

	@include for-size(desktop, down) {
		margin-left: -$laptop_margin_left;
		margin-right: -$laptop_margin_right;
	}

	@include for-size(tablet, down) {
		padding-left: -$tablet_margin_left;
		padding-right: -$tablet_margin_right;
	}

	@include for-size(mobile, down) {
		margin-left: -$mobile_margin_left;
		margin-right: -$mobile_margin_right;
	}
}

@mixin black-button {
	font-size: 14px;
	padding: 12px 30px;
	@include for-size(mobile, down) {
		font-size: 12px;
		padding: 10px 22px;
	}
	font-weight: 400;
	border-radius: 5px;
	background-color: $color_black_0;
	color: $color_white_0;
	text-decoration: none;
	transition: 0.15s linear;
	box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;
	&:hover {
		background-color: $color_orange_2;
	}
}
